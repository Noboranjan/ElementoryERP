#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERPRepository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ERPDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertall_order(all_order instance);
    partial void Updateall_order(all_order instance);
    partial void Deleteall_order(all_order instance);
    partial void Insertdeal(deal instance);
    partial void Updatedeal(deal instance);
    partial void Deletedeal(deal instance);
    partial void Insertinventory(inventory instance);
    partial void Updateinventory(inventory instance);
    partial void Deleteinventory(inventory instance);
    partial void Insertall_shipment(all_shipment instance);
    partial void Updateall_shipment(all_shipment instance);
    partial void Deleteall_shipment(all_shipment instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ERPRepository.Properties.Settings.Default.ERPDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<all_order> all_orders
		{
			get
			{
				return this.GetTable<all_order>();
			}
		}
		
		public System.Data.Linq.Table<deal> deals
		{
			get
			{
				return this.GetTable<deal>();
			}
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<all_shipment> all_shipments
		{
			get
			{
				return this.GetTable<all_shipment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.all_order")]
	public partial class all_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderId;
		
		private string _ProductId;
		
		private string _ProductName;
		
		private System.Nullable<int> _Quantity;
		
		private string _Address;
		
		private string _EmployeeName;
		
		private EntitySet<all_shipment> _all_shipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    #endregion
		
		public all_order()
		{
			this._all_shipments = new EntitySet<all_shipment>(new Action<all_shipment>(this.attach_all_shipments), new Action<all_shipment>(this.detach_all_shipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="VarChar(50)")]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(50)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="all_order_all_shipment", Storage="_all_shipments", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<all_shipment> all_shipments
		{
			get
			{
				return this._all_shipments;
			}
			set
			{
				this._all_shipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_all_shipments(all_shipment entity)
		{
			this.SendPropertyChanging();
			entity.all_order = this;
		}
		
		private void detach_all_shipments(all_shipment entity)
		{
			this.SendPropertyChanging();
			entity.all_order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deal")]
	public partial class deal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyId;
		
		private string _ContactId;
		
		private string _DealersName;
		
		private string _DealersAddress;
		
		private string _DealersPhone;
		
		private string _DealersEmail;
		
		private string _ParentCompany;
		
		private string _IndustryType;
		
		private string _AnnualRevenue;
		
		private string _CurrencyID;
		
		private string _PaymentTerms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(string value);
    partial void OnCompanyIdChanged();
    partial void OnContactIdChanging(string value);
    partial void OnContactIdChanged();
    partial void OnDealersNameChanging(string value);
    partial void OnDealersNameChanged();
    partial void OnDealersAddressChanging(string value);
    partial void OnDealersAddressChanged();
    partial void OnDealersPhoneChanging(string value);
    partial void OnDealersPhoneChanged();
    partial void OnDealersEmailChanging(string value);
    partial void OnDealersEmailChanged();
    partial void OnParentCompanyChanging(string value);
    partial void OnParentCompanyChanged();
    partial void OnIndustryTypeChanging(string value);
    partial void OnIndustryTypeChanged();
    partial void OnAnnualRevenueChanging(string value);
    partial void OnAnnualRevenueChanged();
    partial void OnCurrencyIDChanging(string value);
    partial void OnCurrencyIDChanged();
    partial void OnPaymentTermsChanging(string value);
    partial void OnPaymentTermsChanged();
    #endregion
		
		public deal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealersName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealersName
		{
			get
			{
				return this._DealersName;
			}
			set
			{
				if ((this._DealersName != value))
				{
					this.OnDealersNameChanging(value);
					this.SendPropertyChanging();
					this._DealersName = value;
					this.SendPropertyChanged("DealersName");
					this.OnDealersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealersAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealersAddress
		{
			get
			{
				return this._DealersAddress;
			}
			set
			{
				if ((this._DealersAddress != value))
				{
					this.OnDealersAddressChanging(value);
					this.SendPropertyChanging();
					this._DealersAddress = value;
					this.SendPropertyChanged("DealersAddress");
					this.OnDealersAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealersPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealersPhone
		{
			get
			{
				return this._DealersPhone;
			}
			set
			{
				if ((this._DealersPhone != value))
				{
					this.OnDealersPhoneChanging(value);
					this.SendPropertyChanging();
					this._DealersPhone = value;
					this.SendPropertyChanged("DealersPhone");
					this.OnDealersPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealersEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealersEmail
		{
			get
			{
				return this._DealersEmail;
			}
			set
			{
				if ((this._DealersEmail != value))
				{
					this.OnDealersEmailChanging(value);
					this.SendPropertyChanging();
					this._DealersEmail = value;
					this.SendPropertyChanged("DealersEmail");
					this.OnDealersEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCompany", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentCompany
		{
			get
			{
				return this._ParentCompany;
			}
			set
			{
				if ((this._ParentCompany != value))
				{
					this.OnParentCompanyChanging(value);
					this.SendPropertyChanging();
					this._ParentCompany = value;
					this.SendPropertyChanged("ParentCompany");
					this.OnParentCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IndustryType
		{
			get
			{
				return this._IndustryType;
			}
			set
			{
				if ((this._IndustryType != value))
				{
					this.OnIndustryTypeChanging(value);
					this.SendPropertyChanging();
					this._IndustryType = value;
					this.SendPropertyChanged("IndustryType");
					this.OnIndustryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualRevenue", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnnualRevenue
		{
			get
			{
				return this._AnnualRevenue;
			}
			set
			{
				if ((this._AnnualRevenue != value))
				{
					this.OnAnnualRevenueChanging(value);
					this.SendPropertyChanging();
					this._AnnualRevenue = value;
					this.SendPropertyChanged("AnnualRevenue");
					this.OnAnnualRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerms", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this.OnPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerms = value;
					this.SendPropertyChanged("PaymentTerms");
					this.OnPaymentTermsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductId;
		
		private string _ProductName;
		
		private int _Volume;
		
		private double _Price;
		
		private string _Store;
		
		private string _Catagory;
		
		private int _Tax;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnVolumeChanging(int value);
    partial void OnVolumeChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnStoreChanging(string value);
    partial void OnStoreChanged();
    partial void OnCatagoryChanging(string value);
    partial void OnCatagoryChanged();
    partial void OnTaxChanging(int value);
    partial void OnTaxChanged();
    #endregion
		
		public inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int NOT NULL")]
		public int Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Store
		{
			get
			{
				return this._Store;
			}
			set
			{
				if ((this._Store != value))
				{
					this.OnStoreChanging(value);
					this.SendPropertyChanging();
					this._Store = value;
					this.SendPropertyChanged("Store");
					this.OnStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catagory", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Catagory
		{
			get
			{
				return this._Catagory;
			}
			set
			{
				if ((this._Catagory != value))
				{
					this.OnCatagoryChanging(value);
					this.SendPropertyChanging();
					this._Catagory = value;
					this.SendPropertyChanged("Catagory");
					this.OnCatagoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Int NOT NULL")]
		public int Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.all_shipment")]
	public partial class all_shipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderId;
		
		private int _ShipmentId;
		
		private System.Nullable<int> _ShipmentProgress;
		
		private string _Status;
		
		private EntityRef<all_order> _all_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(string value);
    partial void OnOrderIdChanged();
    partial void OnShipmentIdChanging(int value);
    partial void OnShipmentIdChanged();
    partial void OnShipmentProgressChanging(System.Nullable<int> value);
    partial void OnShipmentProgressChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public all_shipment()
		{
			this._all_order = default(EntityRef<all_order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._all_order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ShipmentId
		{
			get
			{
				return this._ShipmentId;
			}
			set
			{
				if ((this._ShipmentId != value))
				{
					this.OnShipmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShipmentId = value;
					this.SendPropertyChanged("ShipmentId");
					this.OnShipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentProgress", DbType="Int")]
		public System.Nullable<int> ShipmentProgress
		{
			get
			{
				return this._ShipmentProgress;
			}
			set
			{
				if ((this._ShipmentProgress != value))
				{
					this.OnShipmentProgressChanging(value);
					this.SendPropertyChanging();
					this._ShipmentProgress = value;
					this.SendPropertyChanged("ShipmentProgress");
					this.OnShipmentProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="all_order_all_shipment", Storage="_all_order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public all_order all_order
		{
			get
			{
				return this._all_order.Entity;
			}
			set
			{
				all_order previousValue = this._all_order.Entity;
				if (((previousValue != value) 
							|| (this._all_order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._all_order.Entity = null;
						previousValue.all_shipments.Remove(this);
					}
					this._all_order.Entity = value;
					if ((value != null))
					{
						value.all_shipments.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(string);
					}
					this.SendPropertyChanged("all_order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
